{"version":3,"sources":["parser.js","Converter.js","App.js","index.js"],"names":["traverseASTNode","node","object","Object","values","some","value","type","name","args","length","map","arg","decideReturnFromType","child","typeNameArray","split","functionName","plus","minus","multiply","divide","power","equals","less","greater","a","b","Converter","useState","input","setInput","output","setOutput","loading","setLoading","error","setError","useEffect","localStorage","getItem","timeOutId","setTimeout","setItem","convertedInput","instances","match","constantName","replace","ast","parseExpression","convertInput","errorType","start","end","console","log","clearTimeout","Grid","item","container","spacing","xs","direction","md","TextField","multiline","variant","fullWidth","label","onChange","event","target","rows","Paper","elevation","style","height","flexDirection","display","Box","m","flexGrow","CircularProgress","size","Alert","severity","message","padding","width","whiteSpace","App","mx","my","Typography","maxWidth","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22abac43.chunk.js","sourcesContent":["import { parse as parseExpression } from \"equation-parser\";\r\n\r\nexport function convertInput(input) {\r\n\t// Do some funky stuff to recognise namespaces and functions without parameters\r\n\tlet convertedInput = input;\r\n\r\n\tconst instances = convertedInput.match(/math\\.\\w+/g) ?? [];\r\n\tfor (const instance of instances) {\r\n\t\tconst constantName = instance.replace(\"math.\", \"\");\r\n\t\tconvertedInput = convertedInput.replace(constantName, constantName + \"()\");\r\n\t}\r\n\r\n\tconst ast = parseExpression(convertedInput.replace(\"math.\", \"\"));\r\n\r\n\treturn `${traverseASTNode(ast)}; // Original Expression: ${input}`;\r\n}\r\n\r\nfunction traverseASTNode(node) {\r\n\tconst hasNestedNodes = (object) =>\r\n\t\tObject.values(object).some((value) => value.type);\r\n\r\n\t// Check if\r\n\tif (!hasNestedNodes(node)) return decideReturnFromType(node);\r\n\r\n\t// Special types - blocks, unary expressions\r\n\tswitch (node.type) {\r\n\t\tcase \"block\":\r\n\t\t\treturn traverseASTNode(node.child);\r\n\t\tcase \"positive\":\r\n\t\t\treturn `math.add(0, ${traverseASTNode(node.value)})`;\r\n\t\tcase \"negative\":\r\n\t\t\treturn `math.sub(0, ${traverseASTNode(node.value)})`;\r\n\t\tcase \"positive-negative\":\r\n\t\t\treturn `math.mul(${traverseASTNode(node.value)}, -1)`;\r\n\t\tcase \"parser-error\":\r\n\t\t\tthrow node;\r\n\t\tcase \"matrix\":\r\n\t\t\treturn;\r\n\t\tdefault:\r\n\t}\r\n\r\n\t// Binary expression mapper:\r\n\tconst binaryExpressionData = {\r\n\t\tplus: \"math.add\",\r\n\t\tminus: \"math.sub\",\r\n\t\tmultiply: \"math.mul\",\r\n\t\tdivide: \"math.div\",\r\n\t\tpower: \"math.pow\",\r\n\t\tequals: \"math.eq\",\r\n\t\tless: \"math.lt\",\r\n\t\tgreater: \"math.gt\",\r\n\t};\r\n\r\n\tconst typeNameArray = node.type.split(\"-\");\r\n\tconst functionName = binaryExpressionData[typeNameArray[0]];\r\n\r\n\t// Get first word of type to map to script function\r\n\tif (functionName) {\r\n\t\treturn `${functionName}${\r\n\t\t\ttypeNameArray[2] === \"equals\" ? \"e\" : \"\"\r\n\t\t}(${traverseASTNode(node.a)}, ${traverseASTNode(node.b)})`;\r\n\t}\r\n\r\n\treturn;\r\n}\r\n\r\nfunction decideReturnFromType(node) {\r\n\tswitch (node.type) {\r\n\t\tcase \"variable\":\r\n\t\t\treturn node.name;\r\n\t\tcase \"number\":\r\n\t\t\treturn node.value;\r\n\t\tcase \"function\":\r\n\t\t\treturn `math.${node.name}${\r\n\t\t\t\tnode.args.length\r\n\t\t\t\t\t? \"(\" + node.args.map((arg) => traverseASTNode(arg)) + \")\"\r\n\t\t\t\t\t: \"\"\r\n\t\t\t}`;\r\n\t\tcase \"parser-error\":\r\n\t\t\tthrow node;\r\n\t\tdefault:\r\n\t\t\treturn;\r\n\t}\r\n}\r\n","import {\r\n\tGrid,\r\n\tTextField,\r\n\tPaper,\r\n\tBox,\r\n\tCircularProgress,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { convertInput } from \"./parser\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function Converter() {\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst [output, setOutput] = useState(\"Waiting for input...\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInput(localStorage.getItem(\"input\"));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!input) return setLoading(false);\r\n\r\n\t\tconst timeOutId = setTimeout(() => {\r\n\t\t\tsetError(false);\r\n\t\t\tlocalStorage.setItem(\"input\", input ?? \"\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\tsetOutput(convertInput(input));\r\n\t\t\t} catch (error) {\r\n\t\t\t\t// Return custom parser error message\r\n\t\t\t\tif (error?.type === \"parser-error\") {\r\n\t\t\t\t\tsetOutput(\r\n\t\t\t\t\t\t`Input Error | ${error.errorType} at: {start: ${error.start}, end: ${error.end}}`\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Otherwise something else went wrong\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tsetError(error);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t}, 500);\r\n\t\treturn () => clearTimeout(timeOutId);\r\n\t}, [input]);\r\n\r\n\treturn (\r\n\t\t<Grid item container spacing={3} xs={12} direction=\"row\">\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"Equation\"\r\n\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\tsetInput(event.target.value ?? \"\");\r\n\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\trows={10}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tstyle={{ height: \"100%\", flexDirection: \"column\", display: \"flex\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box m={2} display=\"flex\" flexGrow={1}>\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<Box m=\"auto\">\r\n\t\t\t\t\t\t\t\t<CircularProgress size=\"4em\" />\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t) : error ? (\r\n\t\t\t\t\t\t\t<Alert severity=\"error\">\r\n\t\t\t\t\t\t\t\tOops, something went wrong on my side. Send DrBracewell this\r\n\t\t\t\t\t\t\t\terror on discord: {error.message}\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<code\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tpadding: \"20px\",\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{output}\r\n\t\t\t\t\t\t\t</code>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import { Grid, Typography, Box } from \"@material-ui/core\";\n\nimport Converter from \"./Converter\";\n\nfunction App() {\n\treturn (\n\t\t<Box m={3}>\n\t\t\t<Grid container spacing={3} direction=\"column\">\n\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t<Box mx=\"auto\" my={5}>\n\t\t\t\t\t\t<Typography variant=\"h1\">Equation Converter</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item container xs={12}>\n\t\t\t\t\t<Box mx=\"auto\" maxWidth=\"65%\">\n\t\t\t\t\t\t<Typography component=\"span\" variant=\"body1\">\n\t\t\t\t\t\t\tWelcome! This generator is for converting 'normal' mathematical\n\t\t\t\t\t\t\tequations into nested function statements that WynnScript can\n\t\t\t\t\t\t\tunderstand (as chaining operators is not allowed in the language).\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\tHere are some important notes to remember:\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tAs well as using explicit symbols (<code>*, ⋅, ✕, ...</code>),\n\t\t\t\t\t\t\t\t\tmultiplication can be indicated <em>implicitly</em>, such as\n\t\t\t\t\t\t\t\t\tco-efficients of variables (<code>5a = 5*a</code>) or spaces (\n\t\t\t\t\t\t\t\t\t<code>a a = a*a</code>).\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tTo use functions, simply type the name of the function (\n\t\t\t\t\t\t\t\t\t<code>math.</code> is not required), and pass in your\n\t\t\t\t\t\t\t\t\targuments as usual, e.g <code>sin(a)</code>.\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tUnary operators are supported, such as <code>+a</code> which\n\t\t\t\t\t\t\t\t\twill be converted to <code>math.add(0, a)</code> or{\" \"}\n\t\t\t\t\t\t\t\t\t<code>±a</code> to <code>math.mul(a, -1)</code>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tYou can include constants from the <code>math</code>{\" \"}\n\t\t\t\t\t\t\t\t\tnamespaces by prefacing them with <code>math.</code>, such as{\" \"}\n\t\t\t\t\t\t\t\t\t<code>math.pi</code> - and any function that takes 0\n\t\t\t\t\t\t\t\t\tparameters will have its brackets removed, e.g{\" \"}\n\t\t\t\t\t\t\t\t\t<code>pi()</code> to <code>math.pi</code>.\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Converter />\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}